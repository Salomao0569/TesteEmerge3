import React, { useState } from 'react';

export default function TabelaEcoCompleta() {
  const [valores, setValores] = useState({
    aorta: 31,
    aortaAsc: 42,
    atrioEsq: 31,
    volAtrialIndex: '',
    diamDiast: 48,
    diamSist: 32,
    espSepto: 9,
    espParede: 9
  });

  const [resultados, setResultados] = useState({
    volDiastFinal: 154,
    volSistolico: 67,
    massaVE: 147,
    volEjetado: 87,
    fracaoEjecao: 57,
    percentEncurt: 33,
    espRelativa: 0.38,
    indiceMassa: 74
  });

  const calcularResultados = (novosValores) => {
    const dd = parseFloat(novosValores.diamDiast) || 0;
    const ds = parseFloat(novosValores.diamSist) || 0;
    const septo = parseFloat(novosValores.espSepto) || 0;
    const parede = parseFloat(novosValores.espParede) || 0;

    const volDiastFinal = 7 * Math.pow(dd/10, 3) / (2.4 + dd/10);
    const volSistolico = 7 * Math.pow(ds/10, 3) / (2.4 + ds/10);
    const volEjetado = volDiastFinal - volSistolico;
    const fracaoEjecao = (volEjetado / volDiastFinal) * 100;
    const percentEncurt = ((dd - ds) / dd) * 100;
    const espRelativa = (2 * parede) / dd;
    const massaVE = (0.8 * (1.04 * (Math.pow((dd + septo + parede), 3) - Math.pow(dd, 3))) + 0.6) * 0.001;
    const superficieCorporea = 2;
    const indiceMassa = massaVE / superficieCorporea;

    setResultados({
      volDiastFinal: volDiastFinal.toFixed(0),
      volSistolico: volSistolico.toFixed(0),
      massaVE: massaVE.toFixed(1),
      volEjetado: volEjetado.toFixed(0),
      fracaoEjecao: fracaoEjecao.toFixed(0),
      percentEncurt: percentEncurt.toFixed(0),
      espRelativa: espRelativa.toFixed(2),
      indiceMassa: indiceMassa.toFixed(1)
    });
  };

  const handleInputChange = (campo, valor) => {
    const novosValores = { ...valores, [campo]: valor };
    setValores(novosValores);
    calcularResultados(novosValores);
  };

  return (
    <div className="p-4 max-w-6xl mx-auto">
      <h1 className="text-2xl font-bold text-center mb-4">Cálculos e Medidas</h1>
      <table className="w-full border-collapse border border-gray-300">
        <tbody>
          <tr>
            <td className="border p-2 font-medium">Aorta</td>
            <td className="border p-2">
              <input
                type="number"
                className="w-full p-1 border rounded"
                value={valores.aorta}
                onChange={(e) => handleInputChange('aorta', e.target.value)}
              />
            </td>
            <td className="border p-2">mm</td>
            <td className="border p-2 font-medium">Volume Diastólico Final</td>
            <td className="border p-2 text-right">{resultados.volDiastFinal}</td>
            <td className="border p-2">ml</td>
          </tr>
          <tr>
            <td className="border p-2 font-medium">Aorta Ascendente</td>
            <td className="border p-2">
              <input
                type="number"
                className="w-full p-1 border rounded"
                value={valores.aortaAsc}
                onChange={(e) => handleInputChange('aortaAsc', e.target.value)}
              />
            </td>
            <td className="border p-2">mm</td>
            <td className="border p-2 font-medium">Volume Sistólico</td>
            <td className="border p-2 text-right">{resultados.volSistolico}</td>
            <td className="border p-2">ml</td>
          </tr>
          <tr>
            <td className="border p-2 font-medium">Átrio Esquerdo</td>
            <td className="border p-2">
              <input
                type="number"
                className="w-full p-1 border rounded"
                value={valores.atrioEsq}
                onChange={(e) => handleInputChange('atrioEsq', e.target.value)}
              />
            </td>
            <td className="border p-2">mm</td>
            <td className="border p-2 font-medium">Massa do VE</td>
            <td className="border p-2 text-right">{resultados.massaVE}</td>
            <td className="border p-2">g</td>
          </tr>
          <tr>
            <td className="border p-2 font-medium">Vol Atrial Esq. Indexado</td>
            <td className="border p-2">
              <input
                type="number"
                className="w-full p-1 border rounded"
                value={valores.volAtrialIndex}
                onChange={(e) => handleInputChange('volAtrialIndex', e.target.value)}
              />
            </td>
            <td className="border p-2"></td>
            <td className="border p-2 font-medium">Volume Ejetado</td>
            <td className="border p-2 text-right">{resultados.volEjetado}</td>
            <td className="border p-2">ml</td>
          </tr>
          <tr>
            <td className="border p-2 font-medium">Diâmetro Diastólico</td>
            <td className="border p-2">
              <input
                type="number"
                className="w-full p-1 border rounded"
                value={valores.diamDiast}
                onChange={(e) => handleInputChange('diamDiast', e.target.value)}
              />
            </td>
            <td className="border p-2">mm</td>
            <td className="border p-2 font-medium">Fração de Ejeção</td>
            <td className="border p-2 text-right">{resultados.fracaoEjecao}</td>
            <td className="border p-2">%</td>
          </tr>
          <tr>
            <td className="border p-2 font-medium">Diâmetro Sistólico</td>
            <td className="border p-2">
              <input
                type="number"
                className="w-full p-1 border rounded"
                value={valores.diamSist}
                onChange={(e) => handleInputChange('diamSist', e.target.value)}
              />
            </td>
            <td className="border p-2">mm</td>
            <td className="border p-2 font-medium">Percentual Enc. Cavidade</td>
            <td className="border p-2 text-right">{resultados.percentEncurt}</td>
            <td className="border p-2">%</td>
          </tr>
          <tr>
            <td className="border p-2 font-medium">Espessura do Septo</td>
            <td className="border p-2">
              <input
                type="number"
                className="w-full p-1 border rounded"
                value={valores.espSepto}
                onChange={(e) => handleInputChange('espSepto', e.target.value)}
              />
            </td>
            <td className="border p-2">mm</td>
            <td className="border p-2 font-medium">Espessura Relativa Parede</td>
            <td className="border p-2 text-right">{resultados.espRelativa}</td>
            <td className="border p-2"></td>
          </tr>
          <tr>
            <td className="border p-2 font-medium">Espessura da Parede</td>
            <td className="border p-2">
              <input
                type="number"
                className="w-full p-1 border rounded"
                value={valores.espParede}
                onChange={(e) => handleInputChange('espParede', e.target.value)}
              />
            </td>
            <td className="border p-2">mm</td>
            <td className="border p-2 font-medium">Índice de massa</td>
            <td className="border p-2 text-right">{resultados.indiceMassa}</td>
            <td className="border p-2">g/m²</td>
          </tr>
        </tbody>
      </table>
    </div>
  );
}