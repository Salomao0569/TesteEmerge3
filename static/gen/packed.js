function calcularMassaVE(){const DDVE=Number(document.getElementById('diam_diast_final').value);const PPVE=Number(document.getElementById('esp_diast_ppve').value);const SIV=Number(document.getElementById('esp_diast_septo').value);if(DDVE>0&&PPVE>0&&SIV>0){const DDVEcm=DDVE/10;const PPVEcm=PPVE/10;const SIVcm=SIV/10;return Math.round(0.8*(1.04*Math.pow((DDVEcm+PPVEcm+SIVcm),3)-Math.pow(DDVEcm,3))+0.6);}
return 0;}
function calcularResultados(){const peso=parseFloat(document.getElementById('peso').value)||0;const altura=parseFloat(document.getElementById('altura').value)||0;const diamDiastFinal=parseFloat(document.getElementById('diam_diast_final').value)||0;const diamSistFinal=parseFloat(document.getElementById('diam_sist_final').value)||0;const espDiastSepto=parseFloat(document.getElementById('esp_diast_septo').value)||0;const espDiastPPVE=parseFloat(document.getElementById('esp_diast_ppve').value)||0;let superficie=0;if(peso>0&&altura>0){superficie=Math.round((0.007184*Math.pow(peso,0.425)*Math.pow(altura,0.725))*100)/100;document.getElementById('superficie').value=superficie.toFixed(2);}
let volumeDiastFinal=0;if(diamDiastFinal>0){volumeDiastFinal=Math.round(7*Math.pow(diamDiastFinal/10,3)/(2.4+diamDiastFinal/10));document.getElementById('print_volume_diast_final').textContent=volumeDiastFinal+' mL';}
let volumeSistFinal=0;if(diamSistFinal>0){volumeSistFinal=Math.round(7*Math.pow(diamSistFinal/10,3)/(2.4+diamSistFinal/10));document.getElementById('print_volume_sist_final').textContent=volumeSistFinal+' mL';}
if(volumeDiastFinal>0&&volumeSistFinal>0){const volumeEjetado=volumeDiastFinal-volumeSistFinal;document.getElementById('print_volume_ejetado').textContent=volumeEjetado+' mL';const fracaoEjecao=Math.round((volumeEjetado/volumeDiastFinal)*100);document.getElementById('print_fracao_ejecao').textContent=fracaoEjecao+' %';}
if(diamDiastFinal>0&&diamSistFinal>0){const percentEncurt=Math.round(((diamDiastFinal-diamSistFinal)/diamDiastFinal)*100);document.getElementById('print_percent_encurt').textContent=percentEncurt+' %';}
if(diamDiastFinal>0&&espDiastPPVE>0){const espessuraRelativa=Math.round((2*espDiastPPVE/diamDiastFinal)*100)/100;document.getElementById('print_esp_relativa').textContent=espessuraRelativa.toFixed(2);}
if(diamDiastFinal>0&&espDiastSepto>0&&espDiastPPVE>0){const massaVE=calcularMassaVE();document.getElementById('print_massa_ve').textContent=massaVE+' g';if(superficie>0){const indiceMassa=Math.round((massaVE/superficie)*10)/10;document.getElementById('print_indice_massa').textContent=indiceMassa+' g/m²';}}}
document.addEventListener('DOMContentLoaded',function(){const inputs=document.querySelectorAll('input[type="number"]');inputs.forEach(input=>{input.addEventListener('input',calcularResultados);});});function getCSRFToken(){const csrfMetaTag=document.querySelector('meta[name="csrf-token"]');if(!csrfMetaTag){throw new Error('Meta tag CSRF não encontrada');}
const csrfToken=csrfMetaTag.getAttribute('content');if(!csrfToken){throw new Error('Token CSRF vazio');}
return csrfToken;}
function addCSRFToken(headers={}){try{const token=getCSRFToken();return{...headers,'X-CSRFToken':token};}catch(error){console.error('Erro ao adicionar token CSRF:',error);throw error;}}
function gerarDOC(){try{console.log('Iniciando geração do DOC...');const paciente={nome:document.getElementById('nome').value||'N/D',dataNascimento:document.getElementById('dataNascimento').value||'N/D',sexo:document.getElementById('sexo').value||'N/D',peso:document.getElementById('peso').value?`${document.getElementById('peso').value}kg`:'N/D',altura:document.getElementById('altura').value?`${document.getElementById('altura').value}cm`:'N/D',dataExame:document.getElementById('dataExame').value||new Date().toLocaleDateString('pt-BR')};console.log('Dados do paciente:',paciente);const doctorSelect=document.getElementById('selectedDoctor');const doctorData=doctorSelect.value?{nome:doctorSelect.options[doctorSelect.selectedIndex].text,crm:doctorSelect.options[doctorSelect.selectedIndex].dataset.crm,rqe:doctorSelect.options[doctorSelect.selectedIndex].dataset.rqe}:null;console.log('Dados do médico:',doctorData);const laudoContent=$('#editor').summernote('code');console.log('Conteúdo do editor recuperado');const metaTag=document.querySelector('meta[name="csrf-token"]');if(!metaTag){throw new Error('Meta tag CSRF não encontrada');}
const data={paciente:paciente,medidas:{atrio:document.getElementById('atrio').value||'N/D',aorta:document.getElementById('aorta').value||'N/D',diamDiastFinal:document.getElementById('diam_diast_final').value||'N/D',diamSistFinal:document.getElementById('diam_sist_final').value||'N/D',espDiastSepto:document.getElementById('esp_diast_septo').value||'N/D',espDiastPPVE:document.getElementById('esp_diast_ppve').value||'N/D',vd:document.getElementById('vd').value||'N/D'},calculos:{volumeDiastFinal:document.getElementById('print_volume_diast_final').textContent,volumeSistFinal:document.getElementById('print_volume_sist_final').textContent,volumeEjetado:document.getElementById('print_volume_ejetado').textContent,fracaoEjecao:document.getElementById('print_fracao_ejecao').textContent,percentEncurt:document.getElementById('print_percent_encurt').textContent,espRelativa:document.getElementById('print_esp_relativa').textContent,massaVE:document.getElementById('print_massa_ve').textContent},laudo:laudoContent,medico:doctorData};console.log('Dados preparados para envio:',data);fetch('/gerar_doc',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':metaTag.getAttribute('content')},body:JSON.stringify(data)}).then(response=>{console.log('Resposta recebida:',response);if(!response.ok){if(response.headers.get('content-type')?.includes('application/json')){return response.json().then(error=>{throw new Error(error.error||'Erro ao gerar o documento');});}
throw new Error('Erro ao gerar o documento');}
return response.blob();}).then(blob=>{console.log('Blob recebido:',blob);if(!blob){throw new Error('Documento gerado está vazio');}
const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=`Laudo_${paciente.nome.replace(/[^a-zA-Z0-9]/g,'_')}.docx`;document.body.appendChild(a);a.click();window.URL.revokeObjectURL(url);a.remove();console.log('Download iniciado');}).catch(error=>{console.error('Erro ao gerar DOC:',error);alert('Erro ao gerar o documento DOC: '+error.message);});}catch(error){console.error('Erro ao preparar dados:',error);alert('Erro ao preparar dados para geração do documento: '+error.message);}}
async function loadDoctors(){try{const response=await fetch('/api/doctors',{method:'GET',headers:{'Accept':'application/json'}});if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.error||'Erro ao carregar médicos');}
const doctors=await response.json();if(!Array.isArray(doctors)){throw new Error('Formato de dados inválido');}
const updates=[];const doctorsTable=document.querySelector('#doctorsTable');if(doctorsTable){updates.push(updateDoctorsTable(doctors));}
const doctorSelect=document.querySelector('#selectedDoctor');if(doctorSelect){updates.push(updateDoctorsSelect(doctors));}
await Promise.all(updates);}catch(error){console.error('Erro:',error);const doctorsTable=document.querySelector('#doctorsTable');if(doctorsTable){const tbody=doctorsTable.querySelector('tbody');if(tbody){tbody.innerHTML=`<tr><td colspan="4"class="text-center text-danger">Erro ao carregar médicos:${error.message}</td></tr>`;}}}}
function updateDoctorsTable(doctors){const doctorsTable=document.querySelector('#doctorsTable');if(!doctorsTable){return;}
let tbody=doctorsTable.querySelector('tbody');if(!tbody){console.warn("Elemento tbody não encontrado");return;}
try{const rows=doctors.map(doctor=>{const tr=document.createElement('tr');tr.innerHTML=`<td>${doctor.full_name}</td><td>${doctor.crm}</td><td>${doctor.rqe||'-'}</td><td><button class="btn btn-sm btn-danger"onclick="deleteDoctor(${doctor.id})"><i class="fas fa-trash"></i></button></td>`;return tr;});tbody.innerHTML='';rows.forEach(row=>tbody.appendChild(row));}catch(error){console.error('Erro ao atualizar tabela:',error);tbody.innerHTML=`<tr><td colspan="4"class="text-center text-danger">Erro ao atualizar tabela:${error.message}</td></tr>`;}}
function updateDoctorsSelect(doctors){const select=document.querySelector('#selectedDoctor');if(!select)return;select.innerHTML=`<option value="">Selecione...</option>${doctors.map(doctor=>`<option value="${doctor.id}"data-crm="${doctor.crm}"data-rqe="${doctor.rqe}">${doctor.full_name}</option>`).join('')}`;}
async function createDoctor(event){event.preventDefault();const name=document.getElementById('doctorName').value.trim();const crm=document.getElementById('doctorCRM').value.trim();const rqe=document.getElementById('doctorRQE').value.trim();if(!name){showFeedback('Nome do médico é obrigatório','danger');return;}
if(!crm){showFeedback('CRM é obrigatório','danger');return;}
const doctorData={full_name:name,crm:crm,rqe:rqe};try{const response=await fetch('/api/doctors',{method:'POST',headers:{'Content-Type':'application/json','Accept':'application/json'},body:JSON.stringify(doctorData)});const data=await response.json();if(!response.ok){throw new Error(data.error||'Erro ao cadastrar médico');}
showFeedback('Médico cadastrado com sucesso','success');document.getElementById('doctorForm').reset();await loadDoctors();}catch(error){console.error('Erro:',error);showFeedback(error.message,'danger');}}
function showFeedback(message,type='success'){const feedbackDiv=document.createElement('div');feedbackDiv.className=`alert alert-${type}position-fixed top-0 end-0 m-3`;feedbackDiv.style.zIndex='1050';feedbackDiv.textContent=message;document.body.appendChild(feedbackDiv);setTimeout(()=>feedbackDiv.remove(),3000);}
async function deleteDoctor(id){if(!confirm('Tem certeza que deseja excluir este médico?')){return;}
try{const response=await fetch(`/api/doctors/${id}`,{method:'DELETE',headers:{'Accept':'application/json'}});if(!response.ok){const data=await response.json().catch(()=>({}));throw new Error(data.error||'Erro ao excluir médico');}
const feedbackDiv=document.createElement('div');feedbackDiv.className='alert alert-success position-fixed top-0 end-0 m-3';feedbackDiv.textContent='Médico excluído com sucesso';document.body.appendChild(feedbackDiv);setTimeout(()=>feedbackDiv.remove(),3000);await loadDoctors();}catch(error){console.error('Erro:',error);const errorDiv=document.createElement('div');errorDiv.className='alert alert-danger position-fixed top-0 end-0 m-3';errorDiv.textContent=error.message;document.body.appendChild(errorDiv);setTimeout(()=>errorDiv.remove(),3000);}}
document.addEventListener('DOMContentLoaded',function(){const form=document.getElementById('doctorForm');if(form){form.addEventListener('submit',createDoctor);}
loadDoctors();});$(document).ready(function(){console.log('Iniciando configuração do Summernote...');try{$('#editor').summernote({height:500,lang:'pt-BR',toolbar:[['style',['style']],['font',['bold','italic','underline','strikethrough','clear']],['fontsize',['fontsize']],['color',['color']],['para',['ul','ol','paragraph']],['table',['table']],['insert',['link','picture']],['view',['fullscreen','codeview']]],fontSizes:['8','9','10','11','12','14','16','18','24','36'],styleTags:['p','h1','h2','h3','h4','h5','h6'],placeholder:'Digite o conteúdo do laudo aqui...',callbacks:{onChange:function(contents){localStorage.setItem('reportContent',contents);},onInit:function(){console.log('Summernote inicializado com sucesso');const savedContent=localStorage.getItem('reportContent');if(savedContent){$('#editor').summernote('code',savedContent);}}}});}catch(error){console.error('Erro ao configurar Summernote:',error);}});function insertSelectedTemplate(){const templateSelect=document.getElementById('templateSelect');const selectedOption=templateSelect.options[templateSelect.selectedIndex];if(selectedOption&&selectedOption.value){$('#editor').summernote('code',selectedOption.title);}}
function insertSelectedPhrase(){const phraseSelect=document.getElementById('phraseSelect');const selectedOption=phraseSelect.options[phraseSelect.selectedIndex];if(selectedOption&&selectedOption.value){const currentContent=$('#editor').summernote('code');$('#editor').summernote('pasteHTML',selectedOption.title);}}
function inserirAssinaturaMedico(){const select=document.getElementById('selectedDoctor');if(!select)return;const option=select.options[select.selectedIndex];if(!option||!option.value){alert('Por favor, selecione um médico responsável');return;}
const medicName=option.text;const crm=option.dataset.crm;const rqe=option.dataset.rqe;const dadosMedico=`\n\n<p style="text-align: center;"><strong>${medicName}</strong><br>CRM:${crm}${rqe?`<br>RQE:${rqe}`:''}</p>`;const currentContent=$('#editor').summernote('code');$('#editor').summernote('code',currentContent+'\n\n'+dadosMedico);}
function formatarData(input){let valor=input.value.replace(/\D/g,"");if(valor.length>2)valor=valor.replace(/^(\d{2})(\d)/,"$1/$2");if(valor.length>5)valor=valor.replace(/^(\d{2}\/\d{2})(\d)/,"$1/$2");input.value=valor;}
document.addEventListener('DOMContentLoaded',function(){const dateInput=document.getElementById('dataNascimento');if(dateInput){dateInput.addEventListener('input',function(){const examDateInput=document.getElementById('dataExame');if(examDateInput){const today=new Date();const year=today.getFullYear();const month=String(today.getMonth()+1).padStart(2,'0');const day=String(today.getDate()).padStart(2,'0');examDateInput.value=`${year}-${month}-${day}`;}
formatarData(this);});}});function validateNumericInput(input,min,max){const value=parseFloat(input.value);if(isNaN(value)){showError(input,'Valor inválido');return false;}
if(value<min||value>max){showError(input,`Valor deve estar entre ${min}e ${max}`);return false;}
removeError(input);return true;}
function showError(input,message){input.classList.add('is-invalid');const errorDiv=input.nextElementSibling||document.createElement('div');errorDiv.className='invalid-feedback';errorDiv.textContent=message;if(!input.nextElementSibling){input.parentNode.appendChild(errorDiv);}}
function removeError(input){input.classList.remove('is-invalid');const errorDiv=input.nextElementSibling;if(errorDiv&&errorDiv.className==='invalid-feedback'){errorDiv.remove();}}
document.addEventListener('DOMContentLoaded',function(){const numericInputs={'peso':{min:0.5,max:300},'altura':{min:30,max:250},'atrio':{min:10,max:100},'aorta':{min:10,max:100},'diam_diast_final':{min:10,max:100},'diam_sist_final':{min:10,max:100},'esp_diast_septo':{min:1,max:50},'esp_diast_ppve':{min:1,max:50},'vd':{min:1,max:100}};Object.entries(numericInputs).forEach(([id,limits])=>{const input=document.getElementById(id);if(input){input.addEventListener('input',()=>{validateNumericInput(input,limits.min,limits.max);});}});});function gerarPDF(){window.jsPDF=window.jspdf.jsPDF;try{const doc=new jsPDF({orientation:'portrait',unit:'mm',format:'a4',compress:true});const pageWidth=doc.internal.pageSize.width;const pageHeight=doc.internal.pageSize.height;const margin=25;const contentWidth=pageWidth-(2*margin);let currentY=margin;doc.setFontSize(16);doc.setFont('helvetica','bold');const titulo="Laudo de Ecodopplercardiograma";const tituloWidth=doc.getStringUnitWidth(titulo)*16/doc.internal.scaleFactor;const tituloX=(pageWidth-tituloWidth)/2;doc.text(titulo,tituloX,currentY);currentY+=15;const dataExame=document.getElementById('dataExame').value;const dataFormatada=dataExame?new Date(dataExame).toLocaleDateString('pt-BR'):new Date().toLocaleDateString('pt-BR');const dadosPaciente=[["Nome",document.getElementById('nome').value||'N/D'],["Data Nascimento",document.getElementById('dataNascimento').value||'N/D'],["Sexo",document.getElementById('sexo').value||'N/D'],["Peso",(document.getElementById('peso').value?document.getElementById('peso').value+" kg":'N/D')],["Altura",(document.getElementById('altura').value?document.getElementById('altura').value+" cm":'N/D')],["Data do Exame",dataFormatada]];doc.autoTable({startY:currentY,head:[['Dados do Paciente','Valor']],body:dadosPaciente,theme:'striped',headStyles:{fillColor:[41,128,185],textColor:255},styles:{fontSize:10},margin:{left:margin,right:margin}});currentY=doc.autoTable.previous.finalY+15;const medidasCalculos=[["Átrio Esquerdo",document.getElementById('atrio').value||'N/D',"Volume Diastólico Final",document.getElementById('print_volume_diast_final').textContent||'N/D'],["Aorta",document.getElementById('aorta').value||'N/D',"Volume Sistólico Final",document.getElementById('print_volume_sist_final').textContent||'N/D'],["Diâmetro Diastólico",document.getElementById('diam_diast_final').value||'N/D',"Volume Ejetado",document.getElementById('print_volume_ejetado').textContent||'N/D'],["Diâmetro Sistólico",document.getElementById('diam_sist_final').value||'N/D',"Fração de Ejeção",document.getElementById('print_fracao_ejecao').textContent||'N/D'],["Espessura do Septo",document.getElementById('esp_diast_septo').value||'N/D',"Percentual Enc. Cavidade",document.getElementById('print_percent_encurt').textContent||'N/D'],["Espessura PPVE",document.getElementById('esp_diast_ppve').value||'N/D',"Espessura Relativa",document.getElementById('print_esp_relativa').textContent||'N/D'],["Ventrículo Direito",document.getElementById('vd').value||'N/D',"Massa do VE",document.getElementById('print_massa_ve').textContent||'N/D']];doc.autoTable({startY:currentY,head:[['Medida','Valor','Cálculo','Resultado']],body:medidasCalculos,theme:'striped',headStyles:{fillColor:[41,128,185],textColor:255},styles:{fontSize:10},margin:{left:margin,right:margin}});doc.addPage();currentY=margin;doc.setFontSize(11);doc.setFont('helvetica','normal');const editor=document.getElementById('editor');const content=editor.innerText;const lines=doc.splitTextToSize(content,contentWidth);lines.forEach(line=>{if(currentY>pageHeight-margin){doc.addPage();currentY=margin;}
doc.text(line,margin,currentY);currentY+=7;});const doctorSelect=document.getElementById('selectedDoctor');if(doctorSelect.value){if(currentY>pageHeight-40){doc.addPage();currentY=margin;}
const selectedOption=doctorSelect.selectedOptions[0];const doctorName=selectedOption.text;const doctorCRM=selectedOption.dataset.crm;const doctorRQE=selectedOption.dataset.rqe;currentY+=20;doc.setLineWidth(0.5);doc.line(pageWidth/2-40,currentY,pageWidth/2+40,currentY);currentY+=10;doc.setFont('helvetica','bold');doc.text(doctorName,pageWidth/2,currentY,{align:'center'});currentY+=7;doc.setFontSize(10);doc.text(`CRM:${doctorCRM}${doctorRQE?`/RQE:${doctorRQE}`:''}`,pageWidth/2,currentY,{align:'center'});}
const nomePaciente=document.getElementById('nome').value;const nomeArquivo=nomePaciente?`Laudo_${nomePaciente.trim().replace(/[^a-zA-Z0-9]/g,'_')}.pdf`:'laudo_ecocardiograma.pdf';doc.save(nomeArquivo);}catch(error){console.error('Erro ao gerar PDF:',error);alert('Erro ao gerar o PDF. Por favor, tente novamente.');}}